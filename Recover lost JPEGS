#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{
    // Accept a single command-line argument
    if (argc != 2)
    {
        printf("Usage: ./recover FILE\n");
        return 1;
    }
    // Open the memory card

    FILE *card = fopen(argv[1], "r");
    if (card == NULL)
    {
        printf("Could not open file.\n");
        return 1;
    }
    //Read 512 bytes into a buffer
    uint8_t buffer[512];

    // JPEG counter
    int JPEG = 0;
    char filename[8];
    FILE *img = NULL;

    // While there's still data left to read from the memory card
    while (fread(buffer, 1, 512, card) == 512)
    {
        // Create JPEGs from the data
        if (buffer[0] == 0xff && buffer[1] == 0xd8 && buffer[2] == 0xff && (buffer[3] & 0xf0) == 0xe0)
        {
            // First JPEG
            if (JPEG == 0)
            {
               sprintf(filename, "%03i.jpg", JPEG);
               img = fopen(filename, "w");
               fwrite(buffer, 512, 1, img);
               JPEG++;
            }
            // Found another JPEG
            else
            {
                fclose(img);
                sprintf(filename, "%03i.jpg", JPEG);
                img = fopen(filename, "w");
                fwrite(buffer, 512, 1, img);
                JPEG++;
            // close other file and open a new one
            }
        }
        else
        {
            // Already found a JPEG
            if (JPEG > 0)
                {
                    // Keep writing to it
                   fwrite(buffer, 512, 1, img);
                }
            continue;
        }
    }
fclose(img);
fclose(card);

}
 //FILE *f = fopen(filtename, "r");
//fread (data, size, number, inptr);
//sprintf(filename, "%03i.jpg", 2); to make a filename ###.jpg
//FILE *img = fopen(filename, "w");
//fwrite

// 0xff 0xd8 0xff 0xe* in the header, *0,1,2,f anything really

// buffer=[0] = 0xff, 1 = 0xd8, 2 = 0xff ,( 3 & 0xf0 )== 0xe0


// open memory card
// repeat until end of card:
    // read 512 bytes into a buffer
    // if start of a new jpeg
        // if first jpeg ...write 000.jpg
        // else if you found another jpeg, close the file you've writing to to open the up the new file
    // else
        //if already found jpeg, keep writing to it
        // repeat multiple times
// close any remaining files

